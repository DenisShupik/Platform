services:
  # note-service:
  #   image: note-service
  #   build:
  #     context: .
  #     dockerfile: NoteService/Dockerfile

  # jaeger:
  #   image: jaegertracing/all-in-one:latest
  #   ports:
  #     - "16686:16686"
  #     - "4317:4317"
  #     - "4318:4318"
  #   networks:
  #     - app-network

  #  otel-collector:
  #    image: otel/opentelemetry-collector:latest
  #    ports:
  #      - "4317:4317"
  #      - "4318:4318"
  #    volumes:
  #      - ./otel-config.yaml:/etc/otel/config.yaml
  #    command:
  #      - "--config=/etc/otel/config.yaml"
  #    networks:
  #      - app-network

  idp-db:
    image: postgres:17
    restart: unless-stopped
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "keycloak" ]
    environment:
      POSTGRES_DB: ${APP_IDP_DB}
      POSTGRES_USER: ${APP_IDP_DB_USERNAME}
      POSTGRES_PASSWORD: ${APP_IDP_DB_PASSWORD}
    volumes:
      - idp-db-data:/var/lib/postgresql/data
    networks:
      - app-network

  idp:
    image: quay.io/keycloak/keycloak:${KC_VERSION}
    command: [ "start-dev", "--import-realm" ]
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: ${APP_IDP_DB_USERNAME}
      KC_DB_PASSWORD: ${APP_IDP_DB_PASSWORD}
      KC_DB_URL: "jdbc:postgresql://idp-db:5432/${APP_IDP_DB}"
      KC_REALM_NAME: ${KC_REALM_NAME}
      KEYCLOAK_ADMIN: ${KEYCLOAK_ADMIN}
      KEYCLOAK_ADMIN_PASSWORD: ${KEYCLOAK_ADMIN_PASSWORD}
      KC_HTTPS_CERTIFICATE_FILE: "/etc/x509/https/service.crt"
      KC_HTTPS_CERTIFICATE_KEY_FILE: "/etc/x509/https/service.key"
      KK_TO_RMQ_URL: message-broker
      KK_TO_RMQ_VHOST: "/"
      KK_TO_RMQ_USERNAME: ${RABBITMQ_ADMIN}
      KK_TO_RMQ_PASSWORD: ${RABBITMQ_ADMIN_PASSWORD}
    ports:
      - "8443:8443"
    volumes:
      - ./keycloak-to-rabbit-3.0.5.jar:/opt/keycloak/providers/keycloak-to-rabbit-3.0.5.jar:ro
      - ./keycloak_config.json:/opt/keycloak/data/import/realm.json:ro
      - ./service.crt:/etc/x509/https/service.crt:ro
      - ./service.key:/etc/x509/https/service.key:ro
    networks:
      - app-network

  db:
    image: postgres:17
    container_name: db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: 12345678
      POSTGRES_DB: platform_db
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - app-network

  cache:
    image: docker.io/bitnami/valkey:8.0
    environment:
      - ALLOW_EMPTY_PASSWORD=yes
      - VALKEY_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6379:6379'
    volumes:
      - cache-data:/bitnami/valkey/data
    networks:
      - app-network

  storage:
    image: minio/minio
    command: server /data --console-address ":9001"
    ports:
      - "9000:9000"
      - "9001:9001"
    environment:
      MINIO_ROOT_USER: "admin"
      MINIO_ROOT_PASSWORD: "12345678"
    volumes:
      - storage_data:/data

  message-broker:
    image: rabbitmq:4.0.3-management
    container_name: rabbitmq
    ports:
      - "15672:15672"
      - "5672:5672"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_ADMIN}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_ADMIN_PASSWORD}
    volumes:
      - message-broker-data:/var/lib/rabbitmq
    networks:
      - app-network

volumes:
  db-data:
  idp-db-data:
  cache-data:
  storage_data:
  message-broker-data:


networks:
  app-network:
    driver: bridge
