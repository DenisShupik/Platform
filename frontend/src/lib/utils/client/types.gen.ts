// This file is auto-generated by @hey-api/openapi-ts

export type Category = {
    categoryId: number;
    forumId: number;
    title: string;
    created: string;
    createdBy: string;
    threads: Array<Thread>;
};

export type CategoryStats = {
    categoryId: number;
    threadCount: number;
    postCount: number;
};

export type CreateCategoryRequest = {
    forumId: number;
    title: string;
};

export type CreateForumRequest = {
    title: string;
};

export type CreateThreadRequest = {
    categoryId: number;
    title: string;
};

export type Forum = {
    forumId: number;
    title: string;
    created: string;
    createdBy: string;
    categories: Array<Category>;
};

export type ForumKeysetPageResponse = {
    items: Array<Forum>;
};

export type FromBody = {
    content: string;
};

export type GetThreadPostsCountResponse = {
    threadId: number;
    count: number;
};

export type Post = {
    postId: number;
    threadId: number;
    content: string;
    created: string;
    createdBy: string;
};

export type PostKeysetPageResponse = {
    items: Array<Post>;
};

export type PostSortType = 0;

export type PostSortTypeSortCriteria = {
    field: (PostSortType);
    order: (SortOrderType);
};

export type SortOrderType = 0 | 1;

export type Thread = {
    threadId: number;
    postIdSeq: number;
    categoryId: number;
    title: string;
    created: string;
    createdBy: string;
    posts: Array<Post>;
};

export type ThreadKeysetPageResponse = {
    items: Array<Thread>;
};

export type GetCategoryStatsData = {
    path: {
        categoryIds: Array<(number)>;
    };
};

export type GetCategoryStatsResponse = (Array<CategoryStats>);

export type GetCategoryStatsError = (unknown);

export type GetCategoryData = {
    path: {
        categoryId: number;
    };
};

export type GetCategoryResponse = (Category);

export type GetCategoryError = (unknown);

export type GetCategoryThreadsCountData = {
    path: {
        categoryId: number;
    };
};

export type GetCategoryThreadsCountResponse = (number);

export type GetCategoryThreadsCountError = (unknown);

export type GetCategoryThreadsData = {
    path: {
        categoryId: number;
    };
    query?: {
        cursor?: number;
        limit?: number;
    };
};

export type GetCategoryThreadsResponse = (ThreadKeysetPageResponse);

export type GetCategoryThreadsError = (unknown);

export type CreateCategoryData = {
    body: (CreateCategoryRequest);
};

export type CreateCategoryResponse = (number);

export type CreateCategoryError = (unknown);

export type GetForumsData = {
    query?: {
        cursor?: number;
        limit?: number;
    };
};

export type GetForumsResponse = (ForumKeysetPageResponse);

export type GetForumsError = (unknown);

export type CreateForumData = {
    body: (CreateForumRequest);
};

export type CreateForumResponse = (number);

export type CreateForumError = (unknown);

export type GetForumData = {
    path: {
        forumId: number;
    };
};

export type GetForumResponse = (Forum);

export type GetForumError = (unknown);

export type GetPostsData = {
    query: {
        cursor?: number;
        limit?: number;
        threadIds?: Array<(number)>;
        threadLatest: boolean;
    };
};

export type GetPostsResponse = (PostKeysetPageResponse);

export type GetPostsError = (unknown);

export type GetThreadData = {
    path: {
        threadId: number;
    };
};

export type GetThreadResponse = (Thread);

export type GetThreadError = (unknown);

export type GetThreadPostsCountData = {
    path: {
        threadIds: Array<(number)>;
    };
};

export type GetThreadPostsCountResponse2 = (Array<GetThreadPostsCountResponse>);

export type GetThreadPostsCountError = (unknown);

export type GetThreadPostsData = {
    path: {
        threadId: number;
    };
    query?: {
        cursor?: number;
        limit?: number;
        sort?: (PostSortTypeSortCriteria);
    };
};

export type GetThreadPostsResponse = (PostKeysetPageResponse);

export type GetThreadPostsError = (unknown);

export type CreatePostData = {
    body: (FromBody);
    path: {
        threadId: number;
    };
};

export type CreatePostResponse = (number);

export type CreatePostError = (unknown);

export type CreateThreadData = {
    body: (CreateThreadRequest);
};

export type CreateThreadResponse = (number);

export type CreateThreadError = (unknown);