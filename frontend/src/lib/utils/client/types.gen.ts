// This file is auto-generated by @hey-api/openapi-ts

export type Category = {
    categoryId: number;
    forumId: number;
    title: string;
    created: string;
    createdBy: string;
    threads: Array<Thread>;
};

export type CategoryKeysetPageResponse = {
    items: Array<Category>;
};

export type CreateCategoryRequest = {
    forumId: number;
    title: string;
};

export type CreateForumRequest = {
    title: string;
};

export type CreateThreadRequest = {
    categoryId: number;
    title: string;
};

export type FilterType = 'CategoryLatest' | 'ThreadLatest';

export type Forum = {
    forumId: number;
    title: string;
    created: string;
    createdBy: string;
    categories: Array<Category>;
};

export type ForumKeysetPageResponse = {
    items: Array<Forum>;
};

export type FromBody = {
    content: string;
};

export type GetCategoryPostsResponse = {
    categoryId: number;
    post: Post;
};

export type GetThreadPostsCountResponse = {
    threadId: number;
    count: number;
};

export type Post = {
    postId: number;
    threadId: number;
    content: string;
    created: string;
    createdBy: string;
};

export type PostKeysetPageResponse = {
    items: Array<Post>;
};

export type PostSortType = 0;

export type PostSortTypeSortCriteria = {
    field: PostSortType;
    order: SortOrderType;
};

export type SortOrderType = 0 | 1;

export type Thread = {
    threadId: number;
    postIdSeq: number;
    categoryId: number;
    title: string;
    created: string;
    createdBy: string;
    posts: Array<Post>;
};

export type ThreadKeysetPageResponse = {
    items: Array<Thread>;
};

export type User = {
    userId: string;
    username: string;
    email: string;
    enabled: boolean;
    createdAt: string;
};

export type UserKeysetPageResponse = {
    items: Array<User>;
};

export type GetCategoryPostsCountData = {
    body?: never;
    path: {
        categoryIds: Array<number>;
    };
    query?: never;
};

export type GetCategoryPostsCountResponse = {
    [key: string]: number;
};

export type GetCategoryPostsData = {
    body?: never;
    path: {
        categoryIds: Array<number>;
    };
    query: {
        latest: boolean;
    };
};

export type GetCategoryPostsResponse2 = Array<GetCategoryPostsResponse>;

export type GetCategoryData = {
    body?: never;
    path: {
        categoryId: number;
    };
    query?: never;
};

export type GetCategoryResponse = Category;

export type GetCategoryThreadsCountData = {
    body?: never;
    path: {
        categoryIds: Array<number>;
    };
    query?: never;
};

export type GetCategoryThreadsCountResponse = {
    [key: string]: number;
};

export type GetCategoryThreadsData = {
    body?: never;
    path: {
        categoryId: number;
    };
    query?: {
        cursor?: number;
        limit?: number;
    };
};

export type GetCategoryThreadsResponse = ThreadKeysetPageResponse;

export type CreateCategoryData = {
    body: CreateCategoryRequest;
};

export type CreateCategoryResponse = number;

export type GetForumsCountResponse = number;

export type GetForumsData = {
    body?: never;
    path?: never;
    query?: {
        cursor?: number;
        limit?: number;
    };
};

export type GetForumsResponse = ForumKeysetPageResponse;

export type CreateForumData = {
    body: CreateForumRequest;
};

export type CreateForumResponse = number;

export type GetForumData = {
    body?: never;
    path: {
        forumId: number;
    };
    query?: never;
};

export type GetForumResponse = Forum;

export type GetForumCategoriesCountData = {
    body?: never;
    path: {
        forumId: number;
    };
    query?: never;
};

export type GetForumCategoriesCountResponse = number;

export type GetForumCategoriesData = {
    body?: never;
    path: {
        forumId: number;
    };
    query?: {
        cursor?: number;
        limit?: number;
    };
};

export type GetForumCategoriesResponse = CategoryKeysetPageResponse;

export type GetPostsData = {
    body?: never;
    path?: never;
    query?: {
        ids?: Array<number>;
        filter?: FilterType;
        cursor?: number;
        limit?: number;
    };
};

export type GetPostsResponse = PostKeysetPageResponse;

export type GetThreadData = {
    body?: never;
    path: {
        threadId: number;
    };
    query?: never;
};

export type GetThreadResponse = Thread;

export type GetThreadPostsCountData = {
    body?: never;
    path: {
        threadIds: Array<number>;
    };
    query?: never;
};

export type GetThreadPostsCountResponse2 = Array<GetThreadPostsCountResponse>;

export type GetThreadPostsData = {
    body?: never;
    path: {
        threadId: number;
    };
    query?: {
        sort?: PostSortTypeSortCriteria;
        cursor?: number;
        limit?: number;
    };
};

export type GetThreadPostsResponse = PostKeysetPageResponse;

export type CreatePostData = {
    body: FromBody;
    path: {
        threadId: number;
    };
    query?: never;
};

export type CreatePostResponse = number;

export type CreateThreadData = {
    body: CreateThreadRequest;
};

export type CreateThreadResponse = number;

export type UploadAvatarData = {
    body?: {
        file?: Blob | File;
    };
};

export type UploadAvatarError = string | unknown;

export type GetUsersData = {
    body?: never;
    path?: never;
    query: {
        ids: Array<string>;
        cursor?: string;
        limit?: number;
    };
};

export type GetUsersResponse = UserKeysetPageResponse;

export type GetUserData = {
    body?: never;
    path: {
        userId: string;
    };
    query?: never;
};

export type GetUserResponse = User;