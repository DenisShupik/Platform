// This file is auto-generated by @hey-api/openapi-ts

import { createClient, createConfig, type Options, formDataBodySerializer } from '@hey-api/client-fetch';
import type { GetCategoryPostsData, GetCategoryPostsResponse2, GetCategoryStatsData, GetCategoryStatsResponse, GetCategoryData, GetCategoryResponse, GetCategoryThreadsCountData, GetCategoryThreadsCountResponse, GetCategoryThreadsData, GetCategoryThreadsResponse, CreateCategoryData, CreateCategoryResponse, GetForumsCountResponse, GetForumsData, GetForumsResponse, CreateForumData, CreateForumResponse, GetForumData, GetForumResponse, GetForumCategoriesCountData, GetForumCategoriesCountResponse, GetForumCategoriesData, GetForumCategoriesResponse, GetPostsData, GetPostsResponse, GetThreadData, GetThreadResponse, GetThreadPostsCountData, GetThreadPostsCountResponse2, GetThreadPostsData, GetThreadPostsResponse, CreatePostData, CreatePostResponse, CreateThreadData, CreateThreadResponse, UploadAvatarData, UploadAvatarError, GetUsersData, GetUsersResponse, GetUserData, GetUserResponse } from './types.gen';

export const client = createClient(createConfig());

export const getCategoryPosts = <ThrowOnError extends boolean = false>(options: Options<GetCategoryPostsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetCategoryPostsResponse2, unknown, ThrowOnError>({
        ...options,
        url: '/api/categories/{categoryIds}/posts'
    });
};

export const getCategoryStats = <ThrowOnError extends boolean = false>(options: Options<GetCategoryStatsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetCategoryStatsResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/categories/{categoryIds}/stats'
    });
};

export const getCategory = <ThrowOnError extends boolean = false>(options: Options<GetCategoryData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetCategoryResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/categories/{categoryId}'
    });
};

export const getCategoryThreadsCount = <ThrowOnError extends boolean = false>(options: Options<GetCategoryThreadsCountData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetCategoryThreadsCountResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/categories/{categoryId}/threads/count'
    });
};

export const getCategoryThreads = <ThrowOnError extends boolean = false>(options: Options<GetCategoryThreadsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetCategoryThreadsResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/categories/{categoryId}/threads'
    });
};

export const createCategory = <ThrowOnError extends boolean = false>(options: Options<CreateCategoryData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateCategoryResponse, unknown, ThrowOnError>({
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        },
        url: '/api/categories'
    });
};

export const getForumsCount = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).get<GetForumsCountResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/forums/count'
    });
};

export const getForums = <ThrowOnError extends boolean = false>(options?: Options<GetForumsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetForumsResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/forums'
    });
};

export const createForum = <ThrowOnError extends boolean = false>(options: Options<CreateForumData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateForumResponse, unknown, ThrowOnError>({
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        },
        url: '/api/forums'
    });
};

export const getForum = <ThrowOnError extends boolean = false>(options: Options<GetForumData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetForumResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/forums/{forumId}'
    });
};

export const getForumCategoriesCount = <ThrowOnError extends boolean = false>(options: Options<GetForumCategoriesCountData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetForumCategoriesCountResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/forums/{forumId}/categories/count'
    });
};

export const getForumCategories = <ThrowOnError extends boolean = false>(options: Options<GetForumCategoriesData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetForumCategoriesResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/forums/{forumId}/categories'
    });
};

export const getPosts = <ThrowOnError extends boolean = false>(options?: Options<GetPostsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetPostsResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/posts'
    });
};

export const getThread = <ThrowOnError extends boolean = false>(options: Options<GetThreadData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetThreadResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/threads/{threadId}'
    });
};

export const getThreadPostsCount = <ThrowOnError extends boolean = false>(options: Options<GetThreadPostsCountData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetThreadPostsCountResponse2, unknown, ThrowOnError>({
        ...options,
        url: '/api/threads/{threadIds}/posts/count'
    });
};

export const getThreadPosts = <ThrowOnError extends boolean = false>(options: Options<GetThreadPostsData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetThreadPostsResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/threads/{threadId}/posts'
    });
};

export const createPost = <ThrowOnError extends boolean = false>(options: Options<CreatePostData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreatePostResponse, unknown, ThrowOnError>({
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        },
        url: '/api/threads/{threadId}/posts'
    });
};

export const createThread = <ThrowOnError extends boolean = false>(options: Options<CreateThreadData, ThrowOnError>) => {
    return (options?.client ?? client).post<CreateThreadResponse, unknown, ThrowOnError>({
        ...options,
        headers: {
            'Content-Type': 'application/json',
            ...options?.headers
        },
        url: '/api/threads'
    });
};

export const deleteAvatar = <ThrowOnError extends boolean = false>(options?: Options<unknown, ThrowOnError>) => {
    return (options?.client ?? client).delete<unknown, unknown, ThrowOnError>({
        ...options,
        url: '/api/avatars'
    });
};

export const uploadAvatar = <ThrowOnError extends boolean = false>(options?: Options<UploadAvatarData, ThrowOnError>) => {
    return (options?.client ?? client).post<unknown, UploadAvatarError, ThrowOnError>({
        ...options,
        ...formDataBodySerializer,
        headers: {
            'Content-Type': null,
            ...options?.headers
        },
        url: '/api/avatars'
    });
};

export const getUsers = <ThrowOnError extends boolean = false>(options: Options<GetUsersData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUsersResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/users'
    });
};

export const getUser = <ThrowOnError extends boolean = false>(options: Options<GetUserData, ThrowOnError>) => {
    return (options?.client ?? client).get<GetUserResponse, unknown, ThrowOnError>({
        ...options,
        url: '/api/users/{userId}'
    });
};