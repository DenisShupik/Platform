// This file is auto-generated by @hey-api/openapi-ts

import type { GetCategoryPostsResponse2, GetCategoryResponse, GetCategoryThreadsResponse, CreateCategoryResponse, GetForumsCountResponse, GetForumsResponse, CreateForumResponse, GetForumResponse, GetForumCategoriesResponse, GetPostsResponse, GetThreadResponse, GetThreadPostsLatestResponse, GetThreadPostsResponse, CreatePostResponse, CreateThreadResponse, GetUsersResponse, GetUserByIdResponse, GetUsersByIdsResponse } from './types.gen';

const postSchemaResponseTransformer = (data: any) => {
    data.postId = BigInt(data.postId.toString());
    data.threadId = BigInt(data.threadId.toString());
    data.created = new Date(data.created);
    return data;
};

const getCategoryPostsResponseSchemaResponseTransformer = (data: any) => {
    data.categoryId = BigInt(data.categoryId.toString());
    data.post = postSchemaResponseTransformer(data.post);
    return data;
};

export const getCategoryPostsResponseTransformer = async (data: any): Promise<GetCategoryPostsResponse2> => {
    data = data.map((item: any) => {
        return getCategoryPostsResponseSchemaResponseTransformer(item);
    });
    return data;
};

const threadSchemaResponseTransformer = (data: any) => {
    data.threadId = BigInt(data.threadId.toString());
    data.postIdSeq = BigInt(data.postIdSeq.toString());
    data.categoryId = BigInt(data.categoryId.toString());
    data.created = new Date(data.created);
    data.posts = data.posts.map((item: any) => {
        return postSchemaResponseTransformer(item);
    });
    return data;
};

const categorySchemaResponseTransformer = (data: any) => {
    data.categoryId = BigInt(data.categoryId.toString());
    data.forumId = BigInt(data.forumId.toString());
    data.created = new Date(data.created);
    data.threads = data.threads.map((item: any) => {
        return threadSchemaResponseTransformer(item);
    });
    return data;
};

export const getCategoryResponseTransformer = async (data: any): Promise<GetCategoryResponse> => {
    data = categorySchemaResponseTransformer(data);
    return data;
};

export const getCategoryThreadsResponseTransformer = async (data: any): Promise<GetCategoryThreadsResponse> => {
    data = data.map((item: any) => {
        return threadSchemaResponseTransformer(item);
    });
    return data;
};

export const createCategoryResponseTransformer = async (data: any): Promise<CreateCategoryResponse> => {
    data = BigInt(data.toString());
    return data;
};

export const getForumsCountResponseTransformer = async (data: any): Promise<GetForumsCountResponse> => {
    data = BigInt(data.toString());
    return data;
};

const forumSchemaResponseTransformer = (data: any) => {
    data.forumId = BigInt(data.forumId.toString());
    data.created = new Date(data.created);
    data.categories = data.categories.map((item: any) => {
        return categorySchemaResponseTransformer(item);
    });
    return data;
};

const forumKeysetPageResponseSchemaResponseTransformer = (data: any) => {
    data.items = data.items.map((item: any) => {
        return forumSchemaResponseTransformer(item);
    });
    return data;
};

export const getForumsResponseTransformer = async (data: any): Promise<GetForumsResponse> => {
    data = forumKeysetPageResponseSchemaResponseTransformer(data);
    return data;
};

export const createForumResponseTransformer = async (data: any): Promise<CreateForumResponse> => {
    data = BigInt(data.toString());
    return data;
};

export const getForumResponseTransformer = async (data: any): Promise<GetForumResponse> => {
    data = forumSchemaResponseTransformer(data);
    return data;
};

const categoryKeysetPageResponseSchemaResponseTransformer = (data: any) => {
    data.items = data.items.map((item: any) => {
        return categorySchemaResponseTransformer(item);
    });
    return data;
};

export const getForumCategoriesResponseTransformer = async (data: any): Promise<GetForumCategoriesResponse> => {
    data = categoryKeysetPageResponseSchemaResponseTransformer(data);
    return data;
};

const postKeysetPageResponseSchemaResponseTransformer = (data: any) => {
    data.items = data.items.map((item: any) => {
        return postSchemaResponseTransformer(item);
    });
    return data;
};

export const getPostsResponseTransformer = async (data: any): Promise<GetPostsResponse> => {
    data = postKeysetPageResponseSchemaResponseTransformer(data);
    return data;
};

export const getThreadResponseTransformer = async (data: any): Promise<GetThreadResponse> => {
    data = threadSchemaResponseTransformer(data);
    return data;
};

export const getThreadPostsLatestResponseTransformer = async (data: any): Promise<GetThreadPostsLatestResponse> => {
    data = data.map((item: any) => {
        return postSchemaResponseTransformer(item);
    });
    return data;
};

export const getThreadPostsResponseTransformer = async (data: any): Promise<GetThreadPostsResponse> => {
    data = postKeysetPageResponseSchemaResponseTransformer(data);
    return data;
};

export const createPostResponseTransformer = async (data: any): Promise<CreatePostResponse> => {
    data = BigInt(data.toString());
    return data;
};

export const createThreadResponseTransformer = async (data: any): Promise<CreateThreadResponse> => {
    data = BigInt(data.toString());
    return data;
};

const userDtoSchemaResponseTransformer = (data: any) => {
    data.createdAt = new Date(data.createdAt);
    return data;
};

export const getUsersResponseTransformer = async (data: any): Promise<GetUsersResponse> => {
    data = data.map((item: any) => {
        return userDtoSchemaResponseTransformer(item);
    });
    return data;
};

export const getUserByIdResponseTransformer = async (data: any): Promise<GetUserByIdResponse> => {
    data = userDtoSchemaResponseTransformer(data);
    return data;
};

export const getUsersByIdsResponseTransformer = async (data: any): Promise<GetUsersByIdsResponse> => {
    data = data.map((item: any) => {
        return userDtoSchemaResponseTransformer(item);
    });
    return data;
};